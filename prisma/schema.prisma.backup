generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  password  String
  address   String?
  role      String   @default("user")
  orders    Order[]
}

model Category {
  id          String    @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  products    Product[]
}

model Product {
  id           String         @id @default(cuid())
  name         String
  description  String?
  price        Int
  image        String
  stock        Int
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  categoryId   String?
  orderItems   OrderItem[]
  category     Category?      @relation(fields: [categoryId], references: [id])
  stockHistory StockHistory[]
}

model Order {
  id        String      @id @default(cuid())
  userId    String
  total     Int
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  status    String      @default("pending")
  user      User        @relation(fields: [userId], references: [id])
  items     OrderItem[]
}

model OrderItem {
  id        String   @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  price     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model StockHistory {
  id        String   @id @default(cuid())
  productId String
  quantity  Int
  type      String
  note      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id])

  @@index([productId])
}
